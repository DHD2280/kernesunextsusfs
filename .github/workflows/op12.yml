name: Build and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP12-A15"
  BRANCH: "android14-6.1"

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Free Disk Space
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip \
            curl \
            git \
            zip \
            unzip \
            gcc \
            g++ \
            make \
            ninja-build \
            file \
            bc \
            bison \
            flex \
            libssl-dev \
            libelf-dev \
            wget \
            build-essential \
            python3-dev \
            python3-setuptools \
            rsync \
            ccache

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G

      - name: Install Latest Pahole
        run: |
          sudo apt-get remove --purge -y dwarves
          sudo apt-get install -y git build-essential libdw-dev zlib1g-dev
          git clone --recurse-submodules https://git.kernel.org/pub/scm/devel/pahole/pahole.git
          cd pahole
          cmake .
          sudo make install

      - name: Setup Python and Repo Tool
        run: |
          python3 -m pip install --upgrade pip
          pip3 install gitpython xmltodict
          mkdir -p ~/.bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          echo "$HOME/.bin" >> $GITHUB_PATH
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Configure Build Directory
        run: |
          ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          echo "ROOT_DIR=${ROOT_DIR}" >> $GITHUB_ENV
          mkdir -p "builds/${ROOT_DIR}"

      - name: Clone Required Repositories
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          git clone https://github.com/TheWildJames/AnyKernel3.git -b $BRANCH
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/TheWildJames/kernel_patches.git

      - name: Build Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/
        run: |
          cd kernel_platform
          mkdir out
          export PATH="/usr/lib/ccache:$PATH"
          # Modified build command with correct syntax
          ./build_with_bazel.py \
            -t pineapple \
            gki \
            --jobs=$(nproc --all) \
            --verbose_failures \
            --config=stamp \
            --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom \
            --ignore_missing_projects \
            -o "$(pwd)/out"            
      - name: Debug Working Directory
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/out/dist
        run: |         
          pwd
          ls -l

      - name: Create ZIP Package
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          cp kernel_platform/oneplus12_v/kernel_platform/out/dist/Image AnyKernel3/Image
          cp kernel_platform/oneplus12_v/kernel_platform/out/dist/Image.lz4 AnyKernel3/Image.lz4
          cd AnyKernel3  # Move to AnyKernel3 directory
          ZIP_NAME="Anykernel3-OP-A15-android14-6.1-KernelSUNext-SUSFS-$(date +'%Y-%m-%d-%H-%M-%S').zip"
          echo "Creating zip file $ZIP_NAME..."
          zip -r "../$ZIP_NAME" ./*
          echo "zip_name=$ZIP_NAME" >> $GITHUB_ENV

      - name: Publish Release
        run: |
          ZIP_FILE_PATH="$GITHUB_WORKSPACE/builds/${{ env.ROOT_DIR }}/${{ env.zip_name }}"
          echo "ZIP_FILE_PATH: $ZIP_FILE_PATH"
          if [ -f "$ZIP_FILE_PATH" ]; then
              echo "ZIP file exists, proceeding with release..."
          else
              echo "ZIP file not found! Exiting."
              exit 1
          fi
          gh release create "v${BRANCH}-$(date +'%Y.%m.%d-%H%M%S')" "$ZIP_FILE_PATH" \
            --title "OP12 A15 $BRANCH With KernelSU & SUSFS" \
            --notes "Kernel release" \
            --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: |
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/out/*.log
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/**/*.rej
          retention-days: 5
